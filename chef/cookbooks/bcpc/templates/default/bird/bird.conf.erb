router id <%= node['ipaddress'] %>;

listen bgp address <%= node['ipaddress'] %>;

log syslog { info, remote, warning, error, auth, fatal, bug };

<% if @is_headnode %>
filter export_bgp {
  if ifname ~ "lo" then {
    if net != 127.0.0.0/8 then accept;
  }
  reject;
}
<% end %>

<% if @is_worknode %>
filter export_bgp {
  if ifname ~ "tap*" then {
    if net != 0.0.0.0/0 then accept;
  }
  reject;
}
<% end %>

filter import_bgp {
  if net != 0.0.0.0/0 then {
    accept;
  }
  reject;
}

protocol kernel {
  learn;          # Learn all alien routes from the kernel
  persist;        # Don't remove routes on bird shutdown
  scan time 2;    # Scan kernel routing table every 2 seconds
  import all;
  graceful restart;
  export none;
}

<% if @is_headnode %>
protocol direct {
  interface "<%= @iface %>", "lo";
}
<% end %>

<% if @is_worknode %>
protocol direct {
  interface "<%= @iface %>", "tap*";
}
<% end %>

protocol device {
  scan time 2;
}

protocol bgp {
  description "connection to leaf";
  local <%= node['ipaddress'] %> as <%= @as_number %>;
  neighbor <%= @upstream_peer %> as <%= @as_number %>;
  multihop;
  import filter import_bgp;
  graceful restart;
  export filter export_bgp;
  next hop self;
}
