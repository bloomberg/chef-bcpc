# -*- mode: ruby -*-
# vi: set ft=ruby :

# Copyright:: 2019 Bloomberg Finance L.P.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

base_box = 'bento/ubuntu-18.04'
base_box_version = '201812.27.0'

def mount_apt_cache(config)
  user_data_path = Vagrant.user_data_path.to_s
  cache_dir = File.join(user_data_path, 'cache', 'apt', config.vm.box)
  apt_cache_dir = '/var/cache/apt/archives'
  config.vm.synced_folder cache_dir, apt_cache_dir, create: true, owner: '_apt'
end

def setup_proxy(node)
  http_proxy  = ENV['http_proxy']  || ''
  https_proxy = ENV['https_proxy'] || ''
  return unless http_proxy != ''
  node.vm.provision 'shell', path: 'proxyconfig.sh',
                             args: [http_proxy, https_proxy]
end

# get virtualbox private network suffix to use
# * set to environment variable 'VBOX_NET_SUFFIX'
# * default to login name (eg: _login)
# * eg: vbox_net_suffix = ENV['VBOX_NET_SUFFIX'] || '_'+ENV['USER']
vbox_net_suffix = '_' + ENV['USER']
if ENV.has_key? 'VBOX_NET_SUFFIX'
  vbox_net_suffix = ENV['VBOX_NET_SUFFIX']
end

Vagrant.configure(2) do |config|
  if ENV['DEPLOY_NETWORK_VM'] == 'true'

    config.vm.define 'network' do |node|
      config.vm.provider 'virtualbox' do |vb|
        vb.name = 'network'
        vb.memory = 512
      end
      node.vm.hostname = 'network'
      node.vm.box = base_box
      config.vm.box_version = base_box_version
      node.vm.box_download_insecure = true
      mount_apt_cache(node)
      node.vm.network 'private_network',
		virtualbox__intnet: 'management1'+vbox_net_suffix,
                auto_config: false
      node.vm.network 'private_network',
		virtualbox__intnet: 'management2'+vbox_net_suffix,
		auto_config: false
      node.vm.network 'private_network',
		virtualbox__intnet: 'management3'+vbox_net_suffix,
		auto_config: false
      setup_proxy(node)
      node.vm.provision 'shell', path: 'provisioner.sh', args: 'network'
    end

  else

    # Create 3 TORs
    (1..3).each do |i|
      config.vm.define "tor#{i}" do |node|
        node.vm.provider 'virtualbox' do |vb|
          vb.name = "tor#{i}"
          vb.memory = 512
        end
        node.vm.box = base_box
        config.vm.box_version = base_box_version
        node.vm.box_download_insecure = true
        mount_apt_cache(node)
        node.vm.network 'private_network',
		virtualbox__intnet: "tor#{i}_spine1"+vbox_net_suffix,
                auto_config: false
        node.vm.network 'private_network',
		virtualbox__intnet: "tor#{i}_spine2"+vbox_net_suffix,
                auto_config: false
        node.vm.network 'private_network',
		virtualbox__intnet: "tor#{i}_hv"+vbox_net_suffix,
                auto_config: false
        node.vm.network 'private_network',
		virtualbox__intnet: "management#{i}"+vbox_net_suffix,
                auto_config: false
        node.vm.network 'private_network',
		virtualbox__intnet: "storage#{i}"+vbox_net_suffix,
                auto_config: false
        setup_proxy(node)
        node.vm.provision 'shell', path: 'provisioner.sh', args: "tor#{i}"
        node.vm.hostname = "tor#{i}"
      end
    end

    # Create 2 spines
    (1..2).each do |i|
      config.vm.define "spine#{i}" do |node|
        node.vm.provider 'virtualbox' do |vb|
          vb.name = "spine#{i}"
          vb.memory = 512
        end
        node.vm.box = base_box
        config.vm.box_version = base_box_version
        node.vm.box_download_insecure = true
        mount_apt_cache(node)
        node.vm.network 'private_network', 
		virtualbox__intnet: "tor1_spine#{i}"+vbox_net_suffix,
                auto_config: false
        node.vm.network 'private_network', 
		virtualbox__intnet: "tor2_spine#{i}"+vbox_net_suffix,
                auto_config: false
        node.vm.network 'private_network', 
		virtualbox__intnet: "tor3_spine#{i}"+vbox_net_suffix,
                auto_config: false
        setup_proxy(node)
        node.vm.provision 'shell', path: 'provisioner.sh', args: "spine#{i}"
        node.vm.hostname = "spine#{i}"
      end
    end
  end
end
