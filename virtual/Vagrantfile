# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

topology_lp = 'topology/topology.yml'
topology_fp = File.join(File.dirname(__FILE__), topology_lp)
topology = YAML.load_file(topology_fp)

project_name = '/' + File.basename(File.dirname(Dir.getwd))
vb_folder = %x[VBoxManage list systemproperties | grep 'Default machine folder']
vb_folder = vb_folder.match(/^Default machine folder:\s+(.+)$/)[1]

Vagrant.configure("2") do |config|

  config.ssh.forward_x11 = true
  config.vm.box = "bento/ubuntu-18.04"
  config.vm.box_download_insecure = true

  topology['nodes'].each do |node|

    config.vm.define "#{node['host']}" do |subconfig|

      networks = node['networking']['networks']
      gateway = node['networking']['gateway']
      primary = networks.find {|n| n['type'] == 'primary'}

      subconfig.vm.provision "shell" do |s|
        s.path = 'scripts/netcfg.sh'
        s.args = "#{primary['ip']} #{gateway}"
      end

      # network connections
      #
      networks.each do |n|

        args = {}.tap do |args|
          args[:virtualbox__intnet] = n['network']
          args[:auto_config] = false
        end

        subconfig.vm.network("private_network", args)

      end

      hw_profiles = topology['hardware_profiles']
      hw_profile = hw_profiles[node['hardware_profile']]

      subconfig.vm.provider "virtualbox" do |vb|

        # cpu and ram
        #
        vb.name = node['host']
        vb.cpus = hw_profile['cpus']
        vb.memory = hw_profile['ram_gb'] * 1024
        vb.customize ['modifyvm', :id, '--groups', project_name]

        # extra hard drives
        #
        if hw_profile.key?('ext_disks')

          size_gb = hw_profile['ext_disks']['size_gb']
          count = hw_profile['ext_disks']['count']
          drive_letters = ('a'..'z').to_a[1..count]

          drive_letters.each_with_index do |l,i|

            drive_file = "sd#{l}.vdi"
            drive_fp = File.join(vb_folder,project_name,vb.name,drive_file)

            if not File.exists?(drive_fp)

              drive_port = i+1

              vb.customize [
                'createhd',
                '--filename', drive_fp,
                '--size', size_gb * 1024
              ]

              vb.customize [
                'storageattach', :id,
                '--storagectl', 'SATA Controller',
                '--type', 'hdd',
                '--device', 0,
                '--port', drive_port,
                '--medium', drive_fp
              ]

            end

          end # drive_letters

        end # hw_profile.key

      end # virtualbox provider

    end # config.vm define

  end # nodes each

end # vagrant config
