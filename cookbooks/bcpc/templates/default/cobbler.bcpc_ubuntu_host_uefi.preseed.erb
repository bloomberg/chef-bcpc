################################################
#
#              Generated by Chef
#
################################################

# Ubuntu Server Quick Install
# by Dustin Kirkland <kirkland@ubuntu.com>
#  * Documentation: http://bit.ly/uquick-doc

d-i     debian-installer/locale string en_US.UTF-8
d-i     debian-installer/splash boolean false
d-i     console-setup/ask_detect        boolean false
d-i     console-setup/layoutcode        string us
d-i     console-setup/variantcode       string
d-i     netcfg/get_nameservers  string <%= @node['bcpc']['dns_servers'].join(' ') %>
d-i     netcfg/get_ipaddress    string
d-i     netcfg/get_netmask      string 255.255.255.0
d-i     netcfg/get_gateway      string
d-i     netcfg/confirm_static   boolean true

d-i     partman/early_command string \
        udevadm trigger; udevadm settle --timeout=30 \
        for d in \$(ls /dev/sd[a-z]) \$(ls /dev/nvme*n*); do \
            dd if=/dev/zero of=\$d bs=4M count=16 || echo "Write to \$d failed" \
        done
d-i     partman-auto/disk string <%= @node['bcpc']['bootstrap']['uefi_boot_device'] %>
d-i     partman-auto/method string regular
d-i     partman-auto/expert_recipe string root :: \
        1 1 1 free \$gptonly{ } \$primary{ } \$lvmignore{ } \$bios_boot{ } method{ biosgrub } . \
        512 2 512 fat32 \$gptonly{ } \$primary{ } \$lvmignore{ } method{ efi } format{ } . \
        8192 3 8192 linux-swap \$gptonly{ } \$primary{ } method{ swap } format{ } . \
        40000 4 100000000000000 ext4 \$gptonly{ } \$primary{ } method{ format } format{ } use_filesystem{ } filesystem{ ext4 } mountpoint{ / } .
d-i     partman-auto/choose_recipe select root
d-i     partman-partitioning/confirm_write_new_label boolean true
d-i     partman/choose_partition select Finish partitioning and write changes to disk
d-i     partman/confirm boolean true

d-i     partman-lvm/device_remove_lvm boolean true
d-i     partman-lvm/confirm boolean true
d-i     partman/confirm_write_new_label boolean true
d-i     partman/confirm_nooverwrite boolean true
d-i     partman/default_filesystem string ext4

d-i     clock-setup/utc boolean true
d-i     clock-setup/ntp boolean true
d-i     clock-setup/ntp-server  string <%= @node['ntp']['servers'].first %>
d-i     base-installer/kernel/image     string <%= @node['bcpc']['bootstrap']['preseed_kernel'] %>
d-i     passwd/root-login       boolean false
d-i     passwd/make-user        boolean true
d-i     passwd/user-fullname    string ubuntu
d-i     passwd/username string ubuntu
d-i     passwd/user-password-crypted    password <%=get_config('cobbler-root-password-salted')%>
d-i     passwd/user-uid string
d-i     user-setup/allow-password-weak  boolean false
d-i     user-setup/encrypt-home boolean false
d-i     passwd/user-default-groups      string adm cdrom dialout lpadmin plugdev sambashare
d-i     apt-setup/services-select       multiselect security
<% if @node['bcpc']['bootstrap']['proxy'].nil? %>
d-i     mirror/http/proxy string
<% else %>
d-i     mirror/http/proxy string <%= @node['bcpc']['bootstrap']['proxy'] %>
<% end %>

<% if @node['bcpc']['bootstrap']['mirror'].nil? %>
d-i     apt-setup/security_host string security.ubuntu.com
d-i     apt-setup/security_path string /ubuntu
<% else %>
d-i     mirror/country string manual
d-i     mirror/http/hostname string    <%= @node['bcpc']['bootstrap']['mirror'] %>
d-i     mirror/http/directory string   <%= @node['bcpc']['bootstrap']['mirror_path'] %>
d-i     apt-setup/security_host        <%= @node['bcpc']['bootstrap']['mirror'] %>
d-i     apt-setup/security_path string <%= @node['bcpc']['bootstrap']['mirror_path'] %>
<% end %>

d-i     debian-installer/allow_unauthenticated  string false
d-i     pkgsel/upgrade  select safe-upgrade
d-i     pkgsel/language-packs   multiselect
d-i     pkgsel/update-policy    select none
d-i     pkgsel/updatedb boolean true
d-i     grub-installer/skip     boolean false
d-i     lilo-installer/skip     boolean false
d-i     grub-installer/bootdev  string /dev/sda
d-i     grub-installer/only_debian      boolean true
d-i     grub-installer/with_other_os    boolean true
d-i     finish-install/keep-consoles    boolean false
d-i     finish-install/reboot_in_progress       note
d-i     cdrom-detect/eject      boolean true
d-i     debian-installer/exit/halt      boolean false
d-i     debian-installer/exit/poweroff  boolean false
d-i     pkgsel/include string openssh-server

d-i     preseed/late_command string true && \
        <%# known meta packages that automatically pull in linux-image-extra are linux-server, linux-image-generic-lts-*, linux-image-generic %>
        <% unless ['linux-server', 'linux-image-generic'].include?(@node['bcpc']['bootstrap']['preseed_kernel']) or @node['bcpc']['bootstrap']['preseed_kernel'].start_with?('linux-image-generic-lts-') %>
        in-target apt-get -y install <%= @node['bcpc']['bootstrap']['preseed_kernel'].gsub('linux-image', 'linux-image-extra') %> ;\
        <% end %>
        in-target env no_proxy=$http_server wget "http://$http_server:$http_port/cobbler/pub/scripts/get-ssh-keys" -O /root/get-ssh-keys ;\
        in-target chmod 0755 /root/get-ssh-keys ; in-target install -d -m0600 /root/.ssh ;\
        in-target env no_proxy=$http_server /root/get-ssh-keys root -o /root/.ssh/authorized_keys ;\
        echo -e "\n<%=@bootstrap_node['bcpc']['bootstrap'] && @bootstrap_node['bcpc']['bootstrap']['server']%>\t<%=@bootstrap_node['fqdn']%>\n" >> /target/etc/hosts ;\
        wget "http://$http_server:$http_port/cblr/svc/op/nopxe/system/\$(hostname)" -O /dev/null ;
