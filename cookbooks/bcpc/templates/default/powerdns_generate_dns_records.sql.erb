-- insert A record for the root of the cluster domain
INSERT INTO <%=@database_name%>.records (domain_id, name, type, content, bcpc_record_type) VALUES
    ((SELECT id FROM <%=@database_name%>.domains WHERE name='<%=@cluster_domain%>'), '<%=@cluster_domain%>', 'A', '<%=@pdns_anycast_ip%>', 'STATIC')
    ON DUPLICATE KEY UPDATE domain_id=(SELECT id FROM <%=@database_name%>.domains WHERE name='<%=@cluster_domain%>'), name='<%=@cluster_domain%>', type='A', content='<%=@pdns_anycast_ip%>', bcpc_record_type='STATIC';

-- insert NS/SOA records for the cluster domain and reverse DNS domains
-- there is an unfortunate side effect of the update timestamp being included in the content field of the SOA records that causes these INSERTs to circumvent the duplicate detection,
-- so we must delete the old ones after these are inserted
-- MySQL does not allow deleting from a table and selecting from that same table in a subquery, so ids of old SOA records are written to a temporary table, records are deleted,
-- then the temporary table is cleaned up
CREATE TEMPORARY TABLE soa_records_to_delete_<%=get_config('powerdns-update-timestamp')%> (id int);
<% [@cluster_domain, @reverse_float_zone, @reverse_fixed_zones, @management_zone].flatten.each do |zone| %>

-- delete malformed NS record where the content is the management VIP instead of cluster domain
DELETE FROM <%= @database_name %>.records WHERE type='NS' and content='<%= @pdns_anycast_ip %>';

INSERT INTO <%=@database_name%>.records (domain_id, name, type, content, bcpc_record_type) VALUES
    ((SELECT id FROM <%=@database_name%>.domains WHERE name='<%=zone%>'), '<%=zone%>', 'NS', 'ns1.<%= @cluster_domain %>', 'STATIC')
    ON DUPLICATE KEY UPDATE domain_id=(SELECT id FROM <%=@database_name%>.domains WHERE name='<%=zone%>'), name='<%=zone%>', type='NS', content='ns1.<%= @cluster_domain %>', bcpc_record_type='STATIC';

INSERT INTO <%=@database_name%>.records (domain_id, name, type, content, bcpc_record_type) VALUES
    ((SELECT id FROM <%=@database_name%>.domains WHERE name='<%=zone%>'), '<%=zone%>', 'SOA', 'ns1.<%=@cluster_domain%> root.<%=@cluster_domain%> <%=get_config('pdns-update-timestamp')%> 300 600 604800 300', 'static')
    ON DUPLICATE KEY UPDATE domain_id=(select id from <%=@database_name%>.domains where name='<%=zone%>'), name='<%=zone%>', type='SOA', content='<%=@cluster_domain%> root.<%=@cluster_domain%> <%=get_config('pdns-update-timestamp')%> 300 600 604800 300', bcpc_record_type='STATIC';

INSERT INTO soa_records_to_delete_<%=get_config('pdns-update-timestamp')%> SELECT id FROM <%=@database_name%>.records WHERE type='SOA' AND name='<%=zone%>' AND id < (SELECT max(id) FROM <%=@database_name%>.records WHERE type='SOA' AND name='<%=zone%>');
<% end %>
DELETE FROM <%=@database_name%>.records WHERE id IN (SELECT id FROM soa_records_to_delete_<%=get_config('pdns-update-timestamp')%>);

INSERT INTO <%=@database_name%>.records (domain_id, name, type, content, bcpc_record_type) VALUES
    ((SELECT id FROM domains WHERE name='<%=@cluster_domain%>'), 'ns1.<%=@cluster_domain%>', 'A', '<%=@pdns_anycast_ip%>', 'STATIC')
    ON DUPLICATE KEY UPDATE domain_id=(SELECT id FROM domains WHERE name='<%=@cluster_domain%>'), name='ns1.<%=@cluster_domain%>', type='A', content='<%=@pdns_anycast_ip%>', bcpc_record_type='STATIC';

-- insert A and PTR records for all BCPC physical hosts
<% @all_servers.each do |server| %>
<% s_hostname = server['hostname'] %>
<% s_management_ip = server['bcpc']['management']['ip'] %>
<% s_management_reverse = IPAddr.new(server['bcpc']['management']['ip']).reverse %>
-- insert A and PTR records for BCPC host <%=s_hostname%>
INSERT INTO <%=@database_name%>.records (domain_id, name, type, content, bcpc_record_type) VALUES
    ((SELECT id FROM domains WHERE name='<%=@cluster_domain%>'), '<%=s_hostname%>.<%=@cluster_domain%>', 'A', '<%=s_management_ip%>', 'STATIC')
    ON DUPLICATE KEY UPDATE domain_id=(SELECT id FROM domains WHERE name='<%=@cluster_domain%>'), name='<%=s_hostname%>.<%=@cluster_domain%>', type='A', content='<%=s_management_ip%>', bcpc_record_type='STATIC';

INSERT INTO <%= @database_name %>.records (domain_id, name, type, content, bcpc_record_type) VALUES
    (get_ptr_domain('<%= s_management_reverse %>', <%= @mgmt_octets %>), '<%= s_management_reverse %>', 'PTR', '<%= s_hostname %>.<%= @cluster_domain %>', 'STATIC')
    ON DUPLICATE KEY UPDATE domain_id=get_ptr_domain('<%= s_management_reverse %>', <%= @mgmt_octets %>), name='<%= s_management_reverse %>', type='PTR', content='<%= s_hostname %>.<%= @cluster_domain %>', bcpc_record_type='STATIC';
<% end %>

-- insert A records for certain management/monitoring functions
INSERT INTO <%=@database_name%>.records (domain_id, name, type, content, bcpc_record_type) VALUES
    ((SELECT id FROM domains WHERE name='<%=@cluster_domain%>'), 'openstack.<%=@cluster_domain%>', 'A', '<%=@management_vip%>', 'STATIC')
    ON DUPLICATE KEY UPDATE domain_id=(SELECT id FROM domains WHERE name='<%=@cluster_domain%>'), name='openstack.<%=@cluster_domain%>', type='A', content='<%=@management_vip%>', bcpc_record_type='STATIC';
INSERT INTO <%=@database_name%>.records (domain_id, name, type, content, bcpc_record_type) VALUES
    ((SELECT id FROM domains WHERE name='<%=@cluster_domain%>'), 'zabbix.<%=@cluster_domain%>', 'A', '<%=@monitoring_vip%>', 'STATIC')
    ON DUPLICATE KEY UPDATE domain_id=(SELECT id FROM domains WHERE name='<%=@cluster_domain%>'), name='zabbix.<%=@cluster_domain%>', type='A', content='<%=@monitoring_vip%>', bcpc_record_type='STATIC';
INSERT INTO <%=@database_name%>.records (domain_id, name, type, content, bcpc_record_type) VALUES
    ((SELECT id FROM domains WHERE name='<%=@cluster_domain%>'), 'graphite.<%=@cluster_domain%>', 'A', '<%=@monitoring_vip%>', 'STATIC')
    ON DUPLICATE KEY UPDATE domain_id=(SELECT id FROM domains WHERE name='<%=@cluster_domain%>'), name='graphite.<%=@cluster_domain%>', type='A', content='<%=@monitoring_vip%>', bcpc_record_type='STATIC';
INSERT INTO <%=@database_name%>.records (domain_id, name, type, content, bcpc_record_type) VALUES
    ((SELECT id FROM domains WHERE name='<%=@cluster_domain%>'), 'kibana.<%=@cluster_domain%>', 'A', '<%=@monitoring_vip%>', 'STATIC')
    ON DUPLICATE KEY UPDATE domain_id=(SELECT id FROM domains WHERE name='<%=@cluster_domain%>'), name='kibana.<%=@cluster_domain%>', type='A', content='<%=@monitoring_vip%>', bcpc_record_type='STATIC';

-- fixed IPs are inserted by another template (look at powerdns-nova recipe)
