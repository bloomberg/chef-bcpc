router id <%= node['bcpc'][@workload_interface]['ip'] %>;

listen bgp address <%= node['bcpc'][@workload_interface]['ip'] %>;

log syslog { info, remote, warning, error, auth, fatal, bug };

filter export_bgp {
  if ( (ifname ~ "tap*") || (ifname ~ "cali*") || (ifname ~ "dummy*") ) then {
    if net != 0.0.0.0/0 then accept;
  }
  reject;
}

filter import_bgp {
  if net != 0.0.0.0/0 then {
    accept;
  }
  reject;
}

protocol kernel {
  learn;          # Learn all alien routes from the kernel
  persist;        # Don't remove routes on bird shutdown
  scan time 2;    # Scan kernel routing table every 2 seconds
  import all;
  graceful restart;
  export all;     # Default is export none
}

protocol direct {
  interface "-dummy0", "*";
}

protocol device {
  scan time 2;    # Scan interfaces every 2 seconds
}

protocol bgp {
  description "Connection to other hypervisor running Bird";
  local <%= node['bcpc'][@workload_interface]['ip'] %> as <%= @as_number %>;
  neighbor <%= @upstream_peer %> as <%= @as_number %>;
  multihop;
  import filter import_bgp;
  graceful restart;
  export filter export_bgp;
  next hop self;
}
