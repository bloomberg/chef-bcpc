################################################
#
#              Generated by Chef
#
################################################

# Dropping it so procedure can be recreated with changes
DROP PROCEDURE IF EXISTS partition_maintenance_all;

DELIMITER $$
CREATE PROCEDURE `partition_maintenance_all`(SCHEMA_NAME VARCHAR(32))
BEGIN
                CALL partition_table_prepare(SCHEMA_NAME, 'history_text');
                CALL partition_table_prepare(SCHEMA_NAME, 'history_log');

                CALL partition_maintenance(SCHEMA_NAME, 'history', <%= @storage_retention %>, 24, 14);
                CALL partition_maintenance(SCHEMA_NAME, 'history_log', <%= @storage_retention %>, 24, 14);
                CALL partition_maintenance(SCHEMA_NAME, 'history_str', <%= @storage_retention %>, 24, 14);
                CALL partition_maintenance(SCHEMA_NAME, 'history_text', <%= @storage_retention %>, 24, 14);
                CALL partition_maintenance(SCHEMA_NAME, 'history_uint', <%= @storage_retention %>, 24, 14);
                CALL partition_maintenance(SCHEMA_NAME, 'trends', <%= @storage_retention %>, 24, 14);
                CALL partition_maintenance(SCHEMA_NAME, 'trends_uint', <%= @storage_retention %>, 24, 14);
END$$
DELIMITER ;

CALL partition_maintenance_all('zabbix');

UPDATE zabbix.config SET
hk_events_trigger = <%= @storage_retention %>,
hk_events_internal = <%= @storage_retention %>,
hk_events_discovery = <%= @storage_retention %>,
hk_events_autoreg = <%= @storage_retention %>,
hk_services = <%= @storage_retention %>,
hk_audit = <%= @storage_retention %>,
hk_sessions = <%= @storage_retention %>,
hk_history = <%= @storage_retention %>,
hk_trends = <%= @storage_retention %>,
hk_history_mode = 0,
hk_history_global = 1,
hk_trends_mode = 0,
hk_trends_global = 1;
