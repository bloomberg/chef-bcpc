router id {{ interfaces['service']['ip'] }};

log "/var/log/bird/bird.log" { info, warning, error, auth, fatal, bug, remote, debug };

watchdog warning 3 s;

filter to_tor {
  if net != 127.0.0.0/8 then accept;
  reject;
}

filter to_kernel {
  krt_prefsrc = {{ interfaces['service']['ip'] }};
  if net = 0.0.0.0/0 then accept;
  reject;
}

filter from_kernel {
  if ifname ~ "tap*" then accept;
  reject;
}

protocol kernel {
  learn;          # Learn all alien routes from the kernel
  persist;        # Don't remove routes on bird shutdown
  scan time 2;    # Scan kernel routing table every 2 seconds
  merge paths on;
  graceful restart;
  ipv4 {
    export filter to_kernel;
    import filter from_kernel;
  };
}

protocol direct {
  ipv4;
  interface "lo", "service0";
}

protocol device {
  scan time 2;
}

template bgp PEER {
  graceful restart;
  hold time 9;
  keepalive time 3;
  error wait time 9,300;
  ipv4 {
    import all;
    export filter to_tor;
  };
}

{% for transit in transit_interfaces %}
protocol bgp '{{ transit['neighbor']['name'] }}:{{ transit['name'] }}' from PEER {
  local {{ transit['ip'] | ipaddr('address') }} as {{ bgp['asn'] }};
  neighbor {{ transit['neighbor']['ip'] }} as {{ transit['neighbor']['asn'] }};
}

{% endfor %}
