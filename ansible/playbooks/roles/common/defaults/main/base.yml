###############################################################################
# misc
###############################################################################

# the root of the source tree
root_dir: "{{ inventory_dir | dirname }}"

# username and password used to access bare metal machines
initial_ssh_user: ubuntu
initial_ssh_pass: 53cr37

# validate ssl cert (used by get_url)
validate_certs: true

###############################################################################
# ansible
###############################################################################

ansible_python_interpreter: /usr/bin/env python3
ansible_user: "{{ operator_username }}"
ansible_ssh_common_args: >
  -o StrictHostKeyChecking=no
  -o UserKnownHostsFile=/dev/null

###############################################################################
# cloud
###############################################################################
chef_client_package: "{{ 'chef_client' | find_asset(all_file_assets) }}"

###############################################################################
# cloud
###############################################################################

cloud_ip: 10.65.0.254
cloud_domain: bcpc.example.com
cloud_infrastructure_domain: "{{ cloud_domain }}"
cloud_fqdn: "openstack.{{ cloud_domain }}"
cloud_region: "{{ chef_environment['name'] }}"

cloud_vars: "{{ {} | combine(
                      {
                        'chef': {
                          'environment': chef_environment,
                          'databags': chef_databags,
                          'roles': chef_roles
                        }
                      },
                      {
                        'cloud': {
                          'ip': cloud_ip,
                          'domain': cloud_domain,
                          'fqdn': cloud_fqdn,
                          'region': cloud_region
                        }
                      }
                    )
            }}"

###############################################################################
# operator
###############################################################################

# cloud operator (os admin user)
# this is the user that will be added to each node in the cluster and given
# admin privileges
operator_username: operations
operator_group: operators

###############################################################################
# dns servers
###############################################################################

# list of external dns servers
dns:
  servers:
    - 8.8.8.8
    - 8.8.4.4

# default domain search path
dns_search:
  - "{{ cloud_infrastructure_domain }}"

###############################################################################
# ntp servers
###############################################################################

# list of external ntp servers
ntp:
  servers:
    - time1.google.com
    - time2.google.com

###############################################################################
# local_proxy settings
###############################################################################

# configures a locally running http/https proxy service to handle multiple
# proxy endpoints.

local_proxy:
  enabled: false
  environment:
    http: http://proxy.example.com
    https: http://proxy.example.com
  config:
    listen: 127.0.0.1
    port: 8888
    upstream:
      - otherproxy.example.com ".google.com"
      - proxy.example.com # default proxy

###############################################################################
# virtualbox
###############################################################################

virtualbox:
  nat_ip: 10.0.2.15

###############################################################################
# host aggregates
###############################################################################

host_aggregates: []

###############################################################################
# networking
###############################################################################

networking:
  mtu: 9000

use_primary_transit_interface: true
configure_service_ip: true
configure_network_interfaces: true

###############################################################################
# ubuntu apt sources.list
###############################################################################

ubuntu_apt:
  key_url: false
  pools:
    - main
    - restricted
    - universe
    - multiverse
  sources:
    - dist: bionic
      url: http://archive.ubuntu.com/ubuntu
    - dist: bionic-backports
      url: http://archive.ubuntu.com/ubuntu
    - dist: bionic-security
      url: http://security.ubuntu.com/ubuntu
    - dist: bionic-updates
      url: http://archive.ubuntu.com/ubuntu

###############################################################################
# bird
###############################################################################

bird:
  distribution:
    name: bionic-backports

###############################################################################
# license traits
###############################################################################

license_trait_keyword: CUSTOM_LICENSE_

licenses:
  enabled: false
  traits:
    - name: unlicensed
      aggregate: unlicensed
      trait: "{{ license_trait_keyword }}NONE"

###############################################################################
# grub
###############################################################################

grub_cmdline_linux: []

###############################################################################
# system configuration
###############################################################################

# Select desired I/O scheduler to be applied at startup (deadline, noop, cfq)
hardware_io_scheduler: deadline

# Select kernel NVMe multipath support.
# Disabling addresses the issue with controller vs. disk/device naming issues,
# providing consistent, deterministic device naming conventions.
hardware_nvme_multipath: false

# Select whether or not to load newer CPU microcode mitigations at runtime
# when possible (and when it is newer than what the BIOS firmware provides).
hardware_cpu_load_microcode: true

# If pin_version is true, pin to {{ version }}-{{ variant }}
# For example, {{ 5.0.0-32 }}-{{ lowlatency }}
# If pin_version is false, track linux-{{ variant }} upstream
# For example, linux-{{ generic-hwe-18.04 }}
kernel_pin_version: false
kernel_variant: generic-hwe-18.04-edge
kernel_version: ''

# Use this to *add* more reserved ports; i.e. modify value of
# net.ipv4.ip_local_reserved_ports
system_additional_reserved_ports: []

# Select IPv6 support.
system_enable_ipv6: false

# Any other sysctl parameters that are to be overridden
system_parameters_kernel.pid_max: 4194303
system_parameters_net.nf_conntrack_max: 262144

# Read-ahead value for all block devices, in kb
system_readahead_kb: 512

###############################################################################
# unbound
###############################################################################
unbound_powerdns_enabled: true
